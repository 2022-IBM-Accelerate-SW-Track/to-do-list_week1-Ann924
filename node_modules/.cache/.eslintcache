[{"C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\index.js":"1","C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\App.js":"2","C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\component\\navigation\\NavbarComp.js":"3","C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\pages\\About.js":"4","C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\pages\\Home.js":"5","C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\component\\AddTodo.js":"6","C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\component\\todos.js":"7"},{"size":211,"mtime":1654726225064,"results":"8","hashOfConfig":"9"},{"size":282,"mtime":1654726225055,"results":"10","hashOfConfig":"9"},{"size":1329,"mtime":1654726225059,"results":"11","hashOfConfig":"9"},{"size":956,"mtime":1654732051215,"results":"12","hashOfConfig":"9"},{"size":1510,"mtime":1654735302772,"results":"13","hashOfConfig":"9"},{"size":2198,"mtime":1654735372149,"results":"14","hashOfConfig":"9"},{"size":1501,"mtime":1654734835625,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1624cw3",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\index.js",[],"C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\App.js",[],"C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\component\\navigation\\NavbarComp.js",["32"],"C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\pages\\About.js",[],"C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\pages\\Home.js",[],"C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\component\\AddTodo.js",[],"C:\\Users\\al146\\IBM_Practice\\to-do-list_week1-Ann924\\src\\component\\todos.js",["33","34","35"],"import React from \"react\";\r\nimport \"../component/todos.css\";\r\nimport {Card,CardContent,Grid,ListItemButton,ListItemText,Checkbox,} from \"@mui/material\";\r\n\r\n// 1. This component formats and returns the list of todos.\r\n// 2. Treat the question mark like an if statement.\r\n// If the todos array has items in the list [todos.length], we want to return the list\r\n// Else, return a message saying \"You have no todo's left\"\r\n// 3. The map function is called to assign each array item with a key\r\n// 4. Think of lines 14-23 as a loop. For each todo in the todo list, we want to give the list item\r\n// a key, and it's own card shown in the UI\r\nconst Todos = ({ todos }) => {\r\n    const todoList = todos.length ? (\r\n      todos.map((todo) => {\r\n        return (\r\n          <Grid key={todo.id}>\r\n            <Card>\r\n              {/* Remember, we set the local state of this todo item when the user submits the form in \r\n              AddTodo.js. All we need to do is return the todo list item */}\r\n              <CardContent>\r\n                <span style={{ padding: \"50px\" }}>{todo.content}</span>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      })\r\n    ) : (\r\n      <p>You have no todo's left</p>\r\n    );\r\n    // Lastly, return the todoList constant that we created above to show all of the items on the screen.\r\n    return (\r\n      <div className=\"todoCollection\" style={{ padding: \"10px\" }}>\r\n        {todoList}\r\n      </div>\r\n    );\r\n};\r\n  \r\nexport default Todos;\r\n",["36","37"],{"ruleId":"38","severity":1,"message":"39","line":2,"column":22,"nodeType":"40","messageId":"41","endLine":2,"endColumn":33},{"ruleId":"38","severity":1,"message":"42","line":3,"column":31,"nodeType":"40","messageId":"41","endLine":3,"endColumn":45},{"ruleId":"38","severity":1,"message":"43","line":3,"column":46,"nodeType":"40","messageId":"41","endLine":3,"endColumn":58},{"ruleId":"38","severity":1,"message":"44","line":3,"column":59,"nodeType":"40","messageId":"41","endLine":3,"endColumn":67},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'ListItemButton' is defined but never used.","'ListItemText' is defined but never used.","'Checkbox' is defined but never used.","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-global-assign","no-unsafe-negation"]